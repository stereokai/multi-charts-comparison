import{g as k,c as u,u as M,d as B,a as P,G as v,b as R}from"./echarts.renderer.e7d8b748.js";import{bp as r,bq as G}from"./vendor.6c40c153.js";function V(l=new Date){return console.log("Executing FunctionDeclaration getBaseDate from file graphCommon.js at line 1"),l.setDate(l.getDate()-1),l.setHours(22)}const I=l=>(console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 14"),class f extends l{static CHART_LEFT_PADDING=100;get CHART_LEFT_PADDING(){return console.log("Executing FunctionExpression CHART_LEFT_PADDING from file lightningChartChannelsMixin.js at line 17"),f.CHART_LEFT_PADDING}static Y_AXIS_WIDTH=60;get Y_AXIS_WIDTH(){return console.log("Executing FunctionExpression Y_AXIS_WIDTH from file lightningChartChannelsMixin.js at line 22"),f.Y_AXIS_WIDTH}static CHART_GAP=10;get CHART_GAP(){return console.log("Executing FunctionExpression CHART_GAP from file lightningChartChannelsMixin.js at line 27"),f.CHART_GAP}static addChannel(e,t,n,i,o=!1){console.log("Executing FunctionExpression addChannel from file lightningChartChannelsMixin.js at line 31");const s=e.createChartXY({columnIndex:0,rowIndex:n,columnSpan:1,rowSpan:1,disableAnimations:!0}).setTitle("").setPadding({left:f.CHART_LEFT_PADDING,top:f.CHART_GAP/2,bottom:f.CHART_GAP/2}).setBackgroundStrokeStyle(r.emptyLine).setMouseInteractions(!1).setMouseInteractionPan(!0).setMouseInteractionRectangleFit(!1).setZoomingRectangleStrokeStyle(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("red")})})).setFittingRectangleStrokeStyle(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("blue")})})).setBackgroundFillStyle(new r.SolidFill({color:r.ColorHEX("#f0f0f0")})).setSeriesBackgroundFillStyle(new r.SolidFill({color:r.ColorCSS("white")})),a=s.getDefaultAxisX().setMouseInteractions(!1).setTickStrategy(r.AxisTickStrategies.Empty,c=>(console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 82"),console.log(c))).setStrokeStyle(r.emptyLine),g=k(t),h=s.getDefaultAxisY().setMouseInteractions(!1).setChartInteractions(!1).setStrokeStyle(r.emptyLine).setTitle(t.name).setInterval(g.min,g.max).setTitleFont(new r.FontSettings({size:12})).setTitleFillStyle(new r.SolidFill({color:r.ColorHEX("#6e7079")})).setTitleRotation(0).setThickness(f.Y_AXIS_WIDTH).setAnimationZoom(void 0).setTickStrategy(r.AxisTickStrategies.Numeric,c=>(console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 100"),c.setMajorTickStyle(x=>(console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 102"),x.setLabelFillStyle(new r.SolidFill({color:r.ColorHEX("#6e7079")})).setLabelFont(new r.FontSettings({size:6})).setTickStyle(r.emptyLine))).setMinorTickStyle(x=>(console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 110"),x.setLabelFont(new r.FontSettings({size:6})).setTickStyle(r.emptyLine)))));t.dynamicYAxis||h.setScrollStrategy(void 0);let d;return o||(d=f.addLineSeries(s,typeof i=="number"?i:n)),s.setAutoCursorMode(r.AutoCursorModes.disabled),{chart:s,series:d,xAxis:a,yAxis:h,row:n}}static addLineSeries(e,t=0){return console.log("Executing FunctionExpression addLineSeries from file lightningChartChannelsMixin.js at line 134"),e.addLineSeries({dataPattern:{pattern:"ProgressiveX",regularProgressiveStep:!0,allowDataGrouping:!0},automaticColorIndex:t}).setStrokeStyle(n=>(console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 144"),n.setThickness(-1)))}addChannel(e,t,n,i){console.log("Executing FunctionExpression addChannel from file lightningChartChannelsMixin.js at line 147"),window.graphs=this.graphs;const o=f.addChannel(this.dashboard,e,t,n,i),{chart:s,series:a,xAxis:g,yAxis:h,row:d}=o;return s.onSeriesBackgroundMouseClick((c,x)=>{console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 160");try{const m=a.solveNearestFromScreen(c.engine.clientLocation2Engine(x.clientX,x.clientY)),_=parseFloat(m.resultTableContent[1][1]),X=parseFloat(m.resultTableContent[2][1]);this.addEvent({x:_,y:X},t)}catch(m){console.log(`Could not add event marker, ${m}`)}this.markers.forEach(m=>{console.log("Executing ArrowFunctionExpression from file lightningChartChannelsMixin.js at line 174"),m.setResultTableVisibility(r.UIVisibilityModes.never)})}),o}addLineSeries(e,t){return console.log("Executing FunctionExpression addLineSeries from file lightningChartChannelsMixin.js at line 182"),f.addLineSeries(e,t)}});var K=Object.freeze(Object.defineProperty({__proto__:null,default:I},Symbol.toStringTag,{value:"Module"})),A=`<svg id="areazoom-svg" style="position: absolute; z-index: 10000; width: 100%; height: 100%; pointer-events: none;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <!-- <rect id="resize" fill="red" x="190" y="160" width="20" height="20" /> -->
  <rect id="areazoom-rect" fill="rgba(50, 50, 50, 0.5)" />
</svg>`;let p,C;function D(l){console.log("Executing FunctionDeclaration init from file AreaZoom.js at line 6"),l.insertAdjacentHTML("beforeend",A),p=document.getElementById("areazoom-rect")}function y(l){console.log("Executing FunctionDeclaration setHeight from file AreaZoom.js at line 11"),p.setAttribute("height",l)}function w(l){console.log("Executing FunctionDeclaration setPosition from file AreaZoom.js at line 15"),C=l,p.setAttribute("x",l)}function F(l){console.log("Executing FunctionDeclaration move from file AreaZoom.js at line 20"),l>C?p.setAttribute("width",l-C):(p.setAttribute("width",C-l),p.setAttribute("x",l))}function j(){console.log("Executing FunctionDeclaration hide from file AreaZoom.js at line 29");const l=p.getAttribute("x"),E=p.getAttribute("width");return p.setAttribute("width",0),{x:l|0,width:E|0}}var Q=Object.freeze(Object.defineProperty({__proto__:null,svg:A,init:D,setHeight:y,setPosition:w,move:F,hide:j},Symbol.toStringTag,{value:"Module"})),ii=Object.freeze(Object.defineProperty({__proto__:null,svg:A,init:D,setHeight:y,setPosition:w,move:F,hide:j},Symbol.toStringTag,{value:"Module"}));G.init();const T=l=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 22"),class b extends l{static visibleGridStyle=new r.SolidLine({thickness:1,fillStyle:new r.SolidFill({color:r.ColorCSS("#dfdfdf")})});static hiddenGridStyle=r.emptyLine;static getNewDashboard(e,t){return console.log("Executing FunctionExpression getNewDashboard from file lightningChartDashboardMixin.js at line 31"),r.lightningChart({overrideInteractionMouseButtons:{chartXYPanMouseButton:0,chartXYRectangleZoomFitMouseButton:2}}).Dashboard({container:e,numberOfColumns:1,numberOfRows:t,theme:r.Themes.lightNew}).setBackgroundFillStyle(new r.SolidFill({color:r.ColorCSS("white")})).setSplitterStyle(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("black")})})).setSplitterStyleHighlight(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("black")})}))}get maxVisibleCharts(){return console.log("Executing FunctionExpression maxVisibleCharts from file lightningChartDashboardMixin.js at line 66"),super.maxVisibleCharts*2+1}get mainGraph(){return console.log("Executing FunctionExpression mainGraph from file lightningChartDashboardMixin.js at line 70"),this.graphGroup||super.mainGraph}get dashboardLeftOffset(){return console.log("Executing FunctionExpression dashboardLeftOffset from file lightningChartDashboardMixin.js at line 74"),this.CHART_LEFT_PADDING+this.Y_AXIS_WIDTH}constructor(...e){console.log("Executing FunctionExpression constructor from file lightningChartDashboardMixin.js at line 78"),super(...e),this.pinnedGraphs=[],this.markers=[]}newDashboard(e,t=this.maxVisibleCharts){console.log("Executing FunctionExpression newDashboard from file lightningChartDashboardMixin.js at line 84"),this.dashboard=b.getNewDashboard(e,t),D(e)}updateDashboardRowHeights(){console.log("Executing FunctionExpression updateDashboardRowHeights from file lightningChartDashboardMixin.js at line 92");const{dashboard:e,graphs:t,pinnedGraphs:n,mainGraph:i,maxVisibleCharts:o}=this,s=t.map((c,x)=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 97"),x)).filter(c=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 98"),!u[c].isHidden));i.isGroup&&s.push(i.graphIndex);const a=n.map(c=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 104"),c.pinnedIndex)),g=s.concat(a),h=i.xAxis.getHeight(),d=(e.engine.container.clientHeight-h)/g.length;for(let c=0;c<o;c++)g.includes(c)?e.setRowHeight(c,Math.round(d)):e.setRowHeight(c,1e-5);e.setRowHeight(i.row,Math.round(d+h)),window.dashboard=e,y(s.length*d)}setXAxisStyle(){console.log("Executing FunctionExpression setXAxisStyle from file lightningChartDashboardMixin.js at line 126"),this.graphs.forEach((e,t)=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 127"),e.xAxis.setTickStrategy(r.AxisTickStrategies.Empty)}),this.mainGraph.xAxis.setTickStrategy(r.AxisTickStrategies.DateTime,e=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 133"),e.setDateOrigin(new Date(V())).setMajorTickStyle(t=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 139"),t.setGridStrokeStyle(r.emptyLine).setTickStyle(r.emptyLine))).setMinorTickStyle(t=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 142"),t.setGridStrokeStyle(r.emptyLine).setTickStyle(r.emptyLine)))))}syncXAxesZoom(){console.log("Executing FunctionExpression syncXAxesZoom from file lightningChartDashboardMixin.js at line 148"),this.axisSyncHandle&&this.axisSyncHandle.remove();const e=this.graphs.map(t=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 150"),t.xAxis));this.mainGraph.isGroup&&e.push(this.mainGraph.xAxis),this.axisSyncHandle=r.synchronizeAxisIntervals(...e)}resetView(){console.log("Executing FunctionExpression resetView from file lightningChartDashboardMixin.js at line 158");const{mainGraph:e,minX:t,maxX:n}=this;e.xAxis.setInterval(t,n,!1,!0)}toggleGrid(e){console.log("Executing FunctionExpression toggleGrid from file lightningChartDashboardMixin.js at line 163"),this.graphs.forEach(t=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 164");const n=t.yAxis.getTickStrategy();t.yAxis.setTickStrategy(n,i=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 166"),i.setMajorTickStyle(o=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 167"),o.setGridStrokeStyle(e?b.visibleGridStyle:b.hiddenGridStyle)))))})}toggleChannelVisibility(e,t=!1){console.log("Executing FunctionExpression toggleChannelVisibility from file lightningChartDashboardMixin.js at line 178");const n=this.graphs[e];u[e].isHidden?(n.series.dispose(),n.yAxis.dispose()):(n.series.restore(),n.yAxis.restore(),this.toggleZoomBasedData({start:e,end:e+1})),t||this.updateDashboardRowHeights()}toggleChannelSticky(e,t=!1,n=NaN){console.log("Executing FunctionExpression toggleChannelSticky from file lightningChartDashboardMixin.js at line 199");const{pinnedGraphs:i,graphs:o}=this,s=o[e],a=u[e];if(a.isSticky){const g=isNaN(n)?i.length&&i[i.length-1].pinnedIndex-1||this.maxVisibleCharts-1:n,h=this.addChannel(a,g,e);h.pinnedIndex=g,i.push(h),h.series.add(s.series.kc[0].La),a.pinnedGraph=h}else{if(!a.pinnedGraph)return;const g=a.pinnedGraph;a.pinnedGraph=null,i.splice(i.indexOf(g),1).forEach(h=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 235"),h.chart.dispose();for(let d in h)h[d]=null})}t||this.updateDashboardRowHeights()}addGraphGroup(){console.log("Executing FunctionExpression addGraphGroup from file lightningChartDashboardMixin.js at line 248");const e=Math.floor(this.maxVisibleCharts/2),t=this.addChannel({name:"Channel Group"},e,null,!0);this.graphGroup=t,t.isGroup=!0,t.graphIndex=e,t.series={},t.repositionYAxis=function(){console.log("Executing FunctionExpression repositionYAxis from file lightningChartDashboardMixin.js at line 262");const{yAxis:i}=this;i.setInterval(...Object.values(this.series).reduce((o,s)=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 266"),o[0]=Math.min(o[0],s.__bounds.min),o[1]=Math.max(o[1],s.__bounds.max),o),[1/0,-1/0]),!1,!0)}.bind(t)}toggleChannelGrouped(e,t=!1){console.log("Executing FunctionExpression toggleChannelGrouped from file lightningChartDashboardMixin.js at line 279");const n=u[e];if(n.isGrouped){this.mainGraph.isGroup||this.addGraphGroup();const{graphs:i,mainGraph:o}=this,s=i[e],a=this.addLineSeries(o.chart,e);a.__bounds=k(n),o.series[e]=a,o.repositionYAxis(),a.add(s.series.kc[0].La)}else{if(!this.mainGraph.isGroup)return;const{mainGraph:i}=this,o=i.series[e];if(!o)return;if(o.dispose(),i.series[e]=null,delete i.series[e],Object.keys(i.series).length===0){i.chart.dispose();for(let s in i)i[s]=null;this.graphGroup=null}else i.repositionYAxis()}t||(this.setXAxisStyle(),this.syncXAxesZoom(),requestAnimationFrame(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 327"),this.updateDashboardRowHeights()}))}newMontage(){return console.log("Executing FunctionExpression newMontage from file lightningChartDashboardMixin.js at line 333"),u.map((e,t)=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 334"),{channelIndex:t,isHidden:e.isHidden,isSticky:e.isSticky,isGrouped:e.isGrouped,pinnedGraphIndex:e.pinnedGraph&&e.pinnedGraph.pinnedIndex}))}loadMontage(e){if(console.log("Executing FunctionExpression loadMontage from file lightningChartDashboardMixin.js at line 346"),this.pinnedGraphs.splice(0).forEach(t=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 347"),t.chart.dispose();for(let n in t)t[n]=null}),this.mainGraph.isGroup){this.graphGroup.chart.dispose();for(let t in this.mainGraph)this.mainGraph[t]=null;this.graphGroup=null}e.forEach((t,n)=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 362"),u[n].isHidden=t.isHidden,u[n].isSticky=t.isSticky,u[n].isGrouped=t.isGrouped,this.toggleChannelVisibility(n,!0),this.toggleChannelSticky(n,!0,t.pinnedGraphIndex),this.toggleChannelGrouped(n)}),this.updateDashboardRowHeights()}panLeft(){console.log("Executing FunctionExpression panLeft from file lightningChartDashboardMixin.js at line 375");const{xAxis:e,series:t}=this.mainGraph,{minX:n}=this,{start:i,end:o}=e.getInterval(),s=t.scale.x.getPixelSize();let a=(i-o)/4;i+a<n&&(a=n-i),e.pan(a/s)}panRight(){console.log("Executing FunctionExpression panRight from file lightningChartDashboardMixin.js at line 389");const{xAxis:e,series:t}=this.mainGraph,{maxX:n}=this,{start:i,end:o}=e.getInterval(),s=t.scale.x.getPixelSize();let a=(o-i)/4;o+a>n&&(a=n-o),e.pan(a/s)}addEvent(e,t){if(console.log("Executing FunctionExpression addEvent from file lightningChartDashboardMixin.js at line 403"),!M.extraFeatures.events)return;const n=this.graphs[t],{chart:i,series:o}=n,s=i.addChartMarkerXY(void 0,i.getDefaultAxisX(),i.getDefaultAxisY()).setPosition({x:e.x,y:e.y});this.markers.push(s),s.getPointMarker().setFillStyle(new r.SolidFill({color:r.ColorHEX("#0075ff")})).onMouseClick(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 434"),this.markers.forEach(h=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 435"),h.setResultTableVisibility(r.UIVisibilityModes.never)}),s.setResultTableVisibility(r.UIVisibilityModes.always)}),s.getResultTable().onMouseClick(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 442"),G.show("modal-1",{onShow:(h,d,c)=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 444"),h.querySelector("textarea").value=s.__content.reduce((x,m)=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 446"),x+m.join(" ")+`
`),"")},onClose:(h,d,c)=>{if(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 450"),c.target.hasAttribute("ok")){s.__content=h.querySelector("textarea").value.trim().split(`
`).map(x=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 456"),[x])),s.setResultTable(x=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 457"),x.setContent(s.__content)));return}if(c.target.hasAttribute("remove")){s.setResultTableVisibility(r.UIVisibilityModes.never),s.dispose(),this.markers.splice(this.markers.indexOf(s),1);return}}})}),s.__content=[["Custom event"],["Number",this.markers.length.toString()]],s.setResultTableVisibility(r.UIVisibilityModes.never).setResultTable(h=>(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 481"),h.setContent(s.__content))).setDraggingMode(r.UIDraggingModes.notDraggable).setGridStrokeXVisibility(r.UIVisibilityModes.whenDragged).setGridStrokeYVisibility(r.UIVisibilityModes.whenDragged).setTickMarkerXVisibility(r.UIVisibilityModes.whenDragged).setTickMarkerYVisibility(r.UIVisibilityModes.whenDragged)}toggleZoomBasedData(e){console.log("Executing FunctionExpression toggleZoomBasedData from file lightningChartDashboardMixin.js at line 489");const t=e?this.graphs.slice(e.start,e.end):this.graphs;M.extraFeatures.toggleZoomBasedData?B(n=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 495"),t.forEach((i,o)=>{if(console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 496"),!(u[o]&&u[o].isHidden)){i.fullData=[];for(let s=0;s<i.series.kc[0].La.length;s++)i.fullData[s]=i.series.kc[0].La[s].y;i.fullBoundaries=i.series.getBoundaries(),i.fullInterval=i.yAxis.getInterval(),n({name:"limitArray",data:{dataMin:i.fullBoundaries.min.y,dataMax:i.fullBoundaries.max.y,channelData:i.fullData,limitFactor:.2}})}})}).then(n=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 519");let i=0;n.forEach((s,a)=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 521"),u[a]&&u[a].isHidden&&i++;const g=this.graphs[a+i];g.limitedData=s.data,g.limitedDataMin=s.dataMin,g.limitedDataMax=s.dataMax});const o=this.mainGraph.xAxis.getInterval();this.zoomBasedDataHandler.call(this,o.start,o.end),this.zoomBasedDataCB=this.graphs[0].xAxis.onScaleChange(this.zoomBasedDataHandler.bind(this))}):(this.graphs[0].yAxis.offScaleChange(this.zoomBasedDataCB),this.zoomBasedDataHandler(0,0),t.forEach(n=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 546"),n.fullData=null,n.fullBoundaries=null,n.fullInterval=null,n.limitedData=null,n.limitedDataMin=null,n.limitedDataMax=null}))}zoomBasedDataHandler(e,t){if(console.log("Executing FunctionExpression zoomBasedDataHandler from file lightningChartDashboardMixin.js at line 557"),!this.isShowingLimitedZoomBasedData&&Math.abs(t-e)>this.maxX/3){const n=document.querySelector("#label-zoom-based-data");n.classList.add("highlight-flash"),setTimeout(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 564"),n.classList.remove("highlight-flash")},1e3),this.isShowingLimitedZoomBasedData=!0,this.graphs.forEach((i,o)=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 569"),!(u[o]&&u[o].isHidden)&&(i.series.clear(),i.series.addArraysXY(this.timeSeries,i.limitedData),i.yAxis.setInterval(i.limitedDataMin,i.limitedDataMax),i.yAxis.setMouseInteractions(!1),i.yAxis.setChartInteractions(!1))})}else if(this.isShowingLimitedZoomBasedData&&Math.abs(t-e)<=this.maxX/3){const n=document.querySelector("#label-zoom-based-data");n.classList.add("highlight-flash"),setTimeout(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 584"),n.classList.remove("highlight-flash")},1e3),this.isShowingLimitedZoomBasedData=!1,this.graphs.forEach((i,o)=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 589"),!(u[o]&&u[o].isHidden)&&(i.series.clear(),i.series.addArraysXY(this.timeSeries,i.fullData),i.yAxis.setInterval(i.fullInterval.start,i.fullInterval.end),i.yAxis.setMouseInteractions(!1),i.yAxis.setChartInteractions(!1))})}}afterUpdate(){console.log("Executing FunctionExpression afterUpdate from file lightningChartDashboardMixin.js at line 604"),requestAnimationFrame(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartDashboardMixin.js at line 605"),this.toggleZoomBasedData()}),super.afterUpdate&&super.afterUpdate()}});var ei=Object.freeze(Object.defineProperty({__proto__:null,default:T},Symbol.toStringTag,{value:"Module"}));const L=l=>(console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 4"),class extends l{constructor(...e){console.log("Executing FunctionExpression constructor from file lightningChartEventsMixin.js at line 6"),super(...e),this.lastEvent=null,this.hasInitialized=!1,this.graphEvents=P()}markEvent(){console.log("Executing FunctionExpression markEvent from file lightningChartEventsMixin.js at line 14"),this.lastEvent={timestamp:performance.now()}}registerZoomEvents(e){console.log("Executing FunctionExpression registerZoomEvents from file lightningChartEventsMixin.js at line 20"),e.chart.onSeriesBackgroundMouseWheel((t,n)=>{console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 21");let{deltaY:i}=n;const{xAxis:o,yAxis:s}=e,{start:a,end:g}=o.getInterval();i=-i;const h=this.getNewInterval(a,g,i);o.setInterval(h.start,h.end,!1,!0)})}getNewInterval(e,t,n,i=1e4){if(console.log("Executing FunctionExpression getNewInterval from file lightningChartEventsMixin.js at line 33"),i<1e3)return!1;const{minX:o,maxX:s}=this,a=Math.min(s,Math.max(o,e+n*i)),g=Math.max(o,Math.min(s,t-n*i));return a*2>s?this.getNewInterval(e,t,n,i/2):{start:a,end:g}}reportRenderEvent(){console.log("Executing FunctionExpression reportRenderEvent from file lightningChartEventsMixin.js at line 51"),requestAnimationFrame(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 52");const e=(performance.now()-this.lastEvent.timestamp)/1e3;this.hasInitialized?this.graphEvents.render({duration:e,type:v.render}):(this.hasInitialized=!0,this.graphEvents.init({duration:e,type:v.init})),this.lastEvent=null})}toggleAreaZoom(e){console.log("Executing FunctionExpression toggleAreaZoom from file lightningChartEventsMixin.js at line 72"),e?this.graphs.forEach(t=>{console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 74");const{chart:n}=t;n.setMouseInteractionPan(!1),t.chartEvents={offSeriesBackgroundMouseDragStart:n.onSeriesBackgroundMouseDragStart((i,o,s)=>{console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 81"),s===0&&w(o.offsetX)}),offSeriesBackgroundMouseDrag:n.onSeriesBackgroundMouseDrag((i,o,s)=>{console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 87"),s===0&&F(o.offsetX)}),offSeriesBackgroundMouseDragStop:n.onSeriesBackgroundMouseDragStop((i,o,s)=>{if(console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 94"),s!==0)return;const a=j(),g=i.getSeries()[0].scale.x.getPixelSize(),d=this.mainGraph.xAxis.getInterval().start/g-this.dashboardLeftOffset;this.mainGraph.xAxis.setInterval((d+a.x)*g,(d+a.x+a.width)*g,!1,!0)})}}):this.graphs.forEach(t=>{console.log("Executing ArrowFunctionExpression from file lightningChartEventsMixin.js at line 116");const{chart:n}=t;for(const[i,o]of Object.entries(t.chartEvents))n[i](o),t.chartEvents[i]=null;n.setMouseInteractionPan(!0)})}});var ni=Object.freeze(Object.defineProperty({__proto__:null,default:L},Symbol.toStringTag,{value:"Module"}));class H{get minX(){return console.log("Executing FunctionExpression minX from file lightningChartImpl.js at line 4"),this.timeSeries[0]}get maxX(){return console.log("Executing FunctionExpression maxX from file lightningChartImpl.js at line 8"),this.timeSeries[this.timeSeries.length-1]}get mainGraph(){return console.log("Executing FunctionExpression mainGraph from file lightningChartImpl.js at line 12"),this.graphs[this.graphs.length-1]}get maxVisibleCharts(){return console.log("Executing FunctionExpression maxVisibleCharts from file lightningChartImpl.js at line 16"),M.channels.max}constructor(){console.log("Executing FunctionExpression constructor from file lightningChartImpl.js at line 20"),this.graphs=[]}init(E){console.log("Executing FunctionExpression init from file lightningChartImpl.js at line 24"),this.markEvent(),this.newDashboard(E),E.addEventListener("wheel",e=>{console.log("Executing ArrowFunctionExpression from file lightningChartImpl.js at line 32"),e.preventDefault()},{passive:!1})}update(E=[],e){console.log("Executing FunctionExpression update from file lightningChartImpl.js at line 41"),this.hasInitialized&&this.markEvent(),e&&(this.timeSeries=e);const{graphs:t}=this,n=t.length;this.hasChannelsChanged=!1,E.forEach((i,o)=>{console.log("Executing ArrowFunctionExpression from file lightningChartImpl.js at line 54");let s=t[o],a=o;u.length!==n&&(this.hasChannelsChanged=!0,a=n+o,t.push(this.addChannel(u[a],a)),s=t[a],this.registerZoomEvents(s)),s.series.clear(),s.series.addArraysXY(e,i.data)}),t.splice(u.length,t.length-u.length).forEach(i=>{console.log("Executing ArrowFunctionExpression from file lightningChartImpl.js at line 75"),this.hasChannelsChanged=!0,i.chart.dispose();for(let o in i)i[o]=null}),this.afterUpdate()}afterUpdate(){console.log("Executing FunctionExpression afterUpdate from file lightningChartImpl.js at line 86"),(!this.hasInitialized||this.hasChannelsChanged)&&(this.setXAxisStyle(),this.syncXAxesZoom()),requestAnimationFrame(()=>{console.log("Executing ArrowFunctionExpression from file lightningChartImpl.js at line 91"),(!this.hasInitialized||this.hasChannelsChanged)&&this.updateDashboardRowHeights(),this.resetView(),this.reportRenderEvent()})}}var si=Object.freeze(Object.defineProperty({__proto__:null,default:H},Symbol.toStringTag,{value:"Module"}));class z extends T(I(L(H))){}const S=new z,Z=0,O=S.graphEvents;function Y(...l){console.log("Executing FunctionDeclaration init from file LightningChart.js at line 15"),S.init(...l)}function N(...l){console.log("Executing FunctionDeclaration update from file LightningChart.js at line 19"),S.update(...l)}function U(){console.log("Executing FunctionDeclaration showLoading from file LightningChart.js at line 23")}function q(){console.log("Executing FunctionDeclaration hideLoading from file LightningChart.js at line 24")}const W=new Proxy(S,R);var oi=Object.freeze(Object.defineProperty({__proto__:null,baseDate:Z,graphEvents:O,init:Y,update:N,showLoading:U,hideLoading:q,api:W},Symbol.toStringTag,{value:"Module"}));export{Q as A,oi as L,ei as a,ni as b,si as c,V as g,ii as i,K as l};
