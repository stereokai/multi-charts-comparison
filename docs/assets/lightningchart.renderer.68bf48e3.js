import{g as x,c as g,m as P,u as A,d as z,a as V,G as M,b as Y}from"./echarts.renderer.8369e7fc.js";import{bp as n,bq as E}from"./vendor.0cc72c00.js";function O(d=new Date){return d.setDate(d.getDate()-1),d.setHours(22)}let I;function te(d,f){I=f}function j(...d){I(...d)}const _=d=>class p extends d{static CHART_LEFT_PADDING=100;get CHART_LEFT_PADDING(){return p.CHART_LEFT_PADDING}static Y_AXIS_WIDTH=60;get Y_AXIS_WIDTH(){return p.Y_AXIS_WIDTH}static CHART_GAP=10;get CHART_GAP(){return p.CHART_GAP}static SERIES_DEFAULT_FILL_STYLE=new n.SolidFill({color:n.ColorCSS("white")});get SERIES_DEFAULT_FILL_STYLE(){return p.SERIES_DEFAULT_FILL_STYLE}static addChannel(e,i,t,s,r=!1){const a=e.createChartXY({columnIndex:0,rowIndex:t,columnSpan:1,rowSpan:1,disableAnimations:!0}).setTitle("").setPadding({left:p.CHART_LEFT_PADDING,top:p.CHART_GAP/2,bottom:p.CHART_GAP/2}).setBackgroundStrokeStyle(n.emptyLine).setMouseInteractions(!1).setMouseInteractionPan(!0).setMouseInteractionRectangleFit(!1).setZoomingRectangleStrokeStyle(new n.SolidLine({thickness:2,fillStyle:new n.SolidFill({color:n.ColorCSS("red")})})).setFittingRectangleStrokeStyle(new n.SolidLine({thickness:2,fillStyle:new n.SolidFill({color:n.ColorCSS("blue")})})).setBackgroundFillStyle(new n.SolidFill({color:n.ColorHEX("#f0f0f0")})).setSeriesBackgroundFillStyle(p.SERIES_DEFAULT_FILL_STYLE),o=a.getDefaultAxisX().setMouseInteractions(!1).setTickStrategy(n.AxisTickStrategies.Empty,c=>!1).setStrokeStyle(n.emptyLine);x(i);const h=a.getDefaultAxisY().setMouseInteractions(!1).setChartInteractions(!1).setStrokeStyle(n.emptyLine).setTitle(i.name).setTitleFont(new n.FontSettings({size:12})).setTitleFillStyle(new n.SolidFill({color:n.ColorHEX("#6e7079")})).setTitleRotation(0).setThickness(p.Y_AXIS_WIDTH).setAnimationZoom(void 0).setTickStrategy(n.AxisTickStrategies.Numeric,c=>c.setMajorTickStyle(u=>u.setLabelFillStyle(new n.SolidFill({color:n.ColorHEX("#6e7079")})).setLabelFont(new n.FontSettings({size:6})).setTickStyle(n.emptyLine)).setMinorTickStyle(u=>u.setLabelFont(new n.FontSettings({size:6})).setTickStyle(n.emptyLine)));i.dynamicYAxis||h.setScrollStrategy(void 0);let l;return r||(l=p.addLineSeries(a,typeof s=="number"?s:t)),a.setAutoCursorMode(n.AutoCursorModes.disabled),{chart:a,series:l,xAxis:o,yAxis:h,row:t}}static addLineSeries(e,i=0){return e.addLineSeries({dataPattern:{pattern:"ProgressiveX",regularProgressiveStep:!0,allowDataGrouping:!0},automaticColorIndex:i}).setStrokeStyle(t=>t.setThickness(-1))}addChannel(e,i,t,s){const r=p.addChannel(this.dashboard,e,i,t,s),{chart:a,series:o,xAxis:h,yAxis:l,row:c}=r;return a.onSeriesBackgroundMouseClick((u,m)=>{if(m.metaKey)try{const y=o.solveNearestFromScreen(u.engine.clientLocation2Engine(m.clientX,m.clientY)),X=parseFloat(y.resultTableContent[1][1]),R=parseFloat(y.resultTableContent[2][1]);this.addEvent({x:X,y:R},i)}catch{}this.markers.forEach(y=>{y.setResultTableVisibility(n.UIVisibilityModes.never)})}),r}addLineSeries(e,i){return p.addLineSeries(e,i)}getChannelData(e){const i=[],t=this.graphs[e];try{const r=t.series.kc[0].La.length}catch{return[]}for(let s=0;s<t.series.kc[0].La.length;s++)i[s]=t.series.kc[0].La[s].y;return i}};var ie=Object.freeze(Object.defineProperty({__proto__:null,default:_},Symbol.toStringTag,{value:"Module"})),C=`<svg id="areazoom-svg" style="position: absolute; z-index: 10000; width: 100%; height: 100%; pointer-events: none;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <!-- <rect id="resize" fill="red" x="190" y="160" width="20" height="20" /> -->
  <rect id="areazoom-rect" fill="rgba(50, 50, 50, 0.5)" />
</svg>`;let S,b;function D(d){d.insertAdjacentHTML("beforeend",C),S=document.getElementById("areazoom-rect")}function G(d){S.setAttribute("height",d)}function w(d){b=d,S.setAttribute("x",d)}function L(d){d>b?S.setAttribute("width",d-b):(S.setAttribute("width",b-d),S.setAttribute("x",d))}function T(){const d=S.getAttribute("x"),f=S.getAttribute("width");return S.setAttribute("width",0),{x:d|0,width:f|0}}var se=Object.freeze(Object.defineProperty({__proto__:null,svg:C,init:D,setHeight:G,setPosition:w,move:L,hide:T},Symbol.toStringTag,{value:"Module"})),ae=Object.freeze(Object.defineProperty({__proto__:null,svg:C,init:D,setHeight:G,setPosition:w,move:L,hide:T},Symbol.toStringTag,{value:"Module"}));E.init();const F=d=>class v extends d{static visibleGridStyle=new n.SolidLine({thickness:1,fillStyle:new n.SolidFill({color:n.ColorCSS("#dfdfdf")})});static hiddenGridStyle=n.emptyLine;static getNewDashboard(e,i){return n.lightningChart({overrideInteractionMouseButtons:{chartXYPanMouseButton:0,chartXYRectangleZoomFitMouseButton:2}}).Dashboard({container:e,numberOfColumns:1,numberOfRows:i,theme:n.Themes.lightNew}).setBackgroundFillStyle(new n.SolidFill({color:n.ColorCSS("white")})).setSplitterStyle(new n.SolidLine({thickness:2,fillStyle:new n.SolidFill({color:n.ColorCSS("black")})})).setSplitterStyleHighlight(new n.SolidLine({thickness:2,fillStyle:new n.SolidFill({color:n.ColorCSS("black")})}))}get maxVisibleCharts(){return super.maxVisibleCharts*2+1}get mainGraph(){return this.graphGroup||super.mainGraph}get dashboardLeftOffset(){return this.CHART_LEFT_PADDING+this.Y_AXIS_WIDTH}constructor(...e){super(...e),this.pinnedGraphs=[],this.markers=[]}newDashboard(e,i=this.maxVisibleCharts){this.dashboard=v.getNewDashboard(e,i),D(e)}updateDashboardRowHeights(){const{dashboard:e,graphs:i,pinnedGraphs:t,mainGraph:s,maxVisibleCharts:r}=this,a=i.map((u,m)=>m).filter(u=>!g[u].isHidden);s.isGroup&&a.push(s.graphIndex);const o=t.map(u=>u.pinnedIndex),h=a.concat(o),l=s.xAxis.getHeight(),c=(e.engine.container.clientHeight-l)/h.length;for(let u=0;u<r;u++)h.includes(u)?e.setRowHeight(u,Math.round(c)):e.setRowHeight(u,0);e.setRowHeight(s.row,Math.round(c+l)),G(a.length*c)}setXAxisStyle(){this.graphs.forEach((e,i)=>{e.xAxis.setTickStrategy(n.AxisTickStrategies.Empty)}),this.mainGraph.xAxis.setTickStrategy(n.AxisTickStrategies.DateTime,e=>e.setDateOrigin(new Date(O())).setGreatTickStyle(i=>i.setLabelAlignment(0).setTickStyle(n.emptyLine)).setMajorTickStyle(i=>i.setGridStrokeStyle(n.emptyLine).setTickStyle(n.emptyLine)).setMinorTickStyle(i=>i.setGridStrokeStyle(n.emptyLine).setTickStyle(n.emptyLine)))}syncXAxesZoom(){this.axisSyncHandle&&this.axisSyncHandle.remove();const e=this.graphs.map(i=>i.xAxis);this.mainGraph.isGroup&&e.push(this.mainGraph.xAxis),this.axisSyncHandle=n.synchronizeAxisIntervals(...e)}zoomFullyOut(){const{mainGraph:e,minX:i,maxX:t}=this;e.xAxis.setInterval(i,t,!1,!0)}toggleGrid(e){this.graphs.forEach(i=>{const t=i.yAxis.getTickStrategy();i.yAxis.setTickStrategy(t,s=>s.setMajorTickStyle(r=>r.setGridStrokeStyle(e?v.visibleGridStyle:v.hiddenGridStyle)))})}toggleChannelVisibility(e,i=!1){const t=this.graphs[e];if(g[e].isHidden)t.series.dispose(),t.yAxis.dispose(),t.xAxis.dispose(),t.chart.setSeriesBackgroundFillStyle(n.emptyFill);else{if(t.series.restore(),t.yAxis.restore(),t.xAxis.restore(),t.chart.setSeriesBackgroundFillStyle(this.SERIES_DEFAULT_FILL_STYLE),A.extraFeatures.extrapolation){const r=g[e];r.hasTransforms||j(void 0,a=>a===r)}this.toggleZoomBasedData({start:e,end:e+1})}i||this.updateDashboardRowHeights()}toggleChannelSticky(e,i=!1,t=NaN){const{pinnedGraphs:s,graphs:r}=this,a=r[e],o=g[e];if(o.isSticky){const h=isNaN(t)?s.length&&s[s.length-1].pinnedIndex-1||this.maxVisibleCharts-1:t,l=this.addChannel(o,h,e);o.pinnedGraph=l,l.pinnedIndex=h,s.push(l),l.series.add(a.series.kc[0].La),requestAnimationFrame(()=>{const c=x(o);l.yAxis.setInterval(c.min,c.max)})}else{if(!o.pinnedGraph)return;const h=o.pinnedGraph;o.pinnedGraph=null,s.splice(s.indexOf(h),1).forEach(l=>{l.chart.dispose();for(let c in l)l[c]=null})}i||this.updateDashboardRowHeights()}addGraphGroup(){const e=Math.floor(this.maxVisibleCharts/2),i=this.addChannel({name:"Channel Group"},e,null,!0);this.graphGroup=i,i.isGroup=!0,i.graphIndex=e,i.series={},i.repositionYAxis=function(){const{yAxis:s}=this;s.setInterval(...Object.values(this.series).reduce((r,a)=>(r[0]=Math.min(r[0],a.__bounds.min),r[1]=Math.max(r[1],a.__bounds.max),r),[1/0,-1/0]),!1,!0)}.bind(i)}toggleChannelGrouped(e,i=!1){const t=g[e];if(t.isGrouped){this.mainGraph.isGroup||this.addGraphGroup();const{graphs:s,mainGraph:r}=this,a=s[e],o=this.addLineSeries(r.chart,e);o.__bounds=x(t),r.series[e]=o,o.add(a.series.kc[0].La),requestAnimationFrame(()=>{r.repositionYAxis()})}else{if(!this.mainGraph.isGroup)return;const{mainGraph:s}=this,r=s.series[e];if(!r)return;if(r.dispose(),s.series[e]=null,delete s.series[e],Object.keys(s.series).length===0){s.chart.dispose();for(let a in s)s[a]=null;this.graphGroup=null}else s.repositionYAxis()}i||(this.setXAxisStyle(),this.syncXAxesZoom(),requestAnimationFrame(()=>{this.updateDashboardRowHeights()}))}newMontage(){return g.map((e,i)=>({channelIndex:i,isHidden:e.isHidden,isSticky:e.isSticky,isGrouped:e.isGrouped,pinnedGraphIndex:e.pinnedGraph&&e.pinnedGraph.pinnedIndex}))}loadMontage(e){if(this.pinnedGraphs.splice(0).forEach(i=>{i.chart.dispose();for(let t in i)i[t]=null}),this.mainGraph.isGroup){this.graphGroup.chart.dispose();for(let i in this.mainGraph)this.mainGraph[i]=null;this.graphGroup=null}e.forEach((i,t)=>{g[t].isHidden=i.isHidden,g[t].isSticky=i.isSticky,g[t].isGrouped=i.isGrouped,this.toggleChannelVisibility(t,!0),this.toggleChannelSticky(t,!0,i.pinnedGraphIndex),this.toggleChannelGrouped(t)}),this.updateDashboardRowHeights()}panLeft(){const{xAxis:e,series:i}=this.graphs[0],{minX:t}=this,{start:s,end:r}=e.getInterval(),a=i.scale.x.getPixelSize();let o=(s-r)/4;s+o<t&&(o=t-s),e.pan(o/a)}panRight(){const{xAxis:e,series:i}=this.graphs[0],{maxX:t}=this,{start:s,end:r}=e.getInterval(),a=i.scale.x.getPixelSize();let o=(r-s)/4;r+o>t&&(o=t-r),e.pan(o/a)}toggleEvents(){A.extraFeatures.events||this.markers.forEach(e=>{e.setResultTableVisibility(n.UIVisibilityModes.never),e.dispose(),this.markers.splice(this.markers.indexOf(e),1)})}addEvent(e,i){if(!A.extraFeatures.events)return;const t=this.graphs[i],{chart:s,series:r}=t,a=s.addChartMarkerXY(void 0,s.getDefaultAxisX(),s.getDefaultAxisY()).setPosition({x:e.x,y:e.y});this.markers.push(a),a.getPointMarker().setFillStyle(new n.SolidFill({color:n.ColorHEX("#0075ff")})).onMouseClick(()=>{this.markers.forEach(l=>{l.setResultTableVisibility(n.UIVisibilityModes.never)}),a.setResultTableVisibility(n.UIVisibilityModes.always)}),a.getResultTable().onMouseClick(()=>{E.show("modal-1",{onShow:(l,c,u)=>{l.querySelector("textarea").value=a.__content.reduce((m,y)=>m+y.join(" ")+`
`,"")},onClose:(l,c,u)=>{if(u.target.hasAttribute("ok")){a.__content=l.querySelector("textarea").value.trim().split(`
`).map(m=>[m]),a.setResultTable(m=>m.setContent(a.__content));return}if(u.target.hasAttribute("remove")){a.setResultTableVisibility(n.UIVisibilityModes.never),a.dispose(),this.markers.splice(this.markers.indexOf(a),1);return}}})}),a.__content=[["Custom event"],["Number",this.markers.length.toString()]],a.setResultTableVisibility(n.UIVisibilityModes.never).setResultTable(l=>l.setContent(a.__content)).setDraggingMode(n.UIDraggingModes.notDraggable).setGridStrokeXVisibility(n.UIVisibilityModes.whenDragged).setGridStrokeYVisibility(n.UIVisibilityModes.whenDragged).setTickMarkerXVisibility(n.UIVisibilityModes.whenDragged).setTickMarkerYVisibility(n.UIVisibilityModes.whenDragged)}toggleZoomBasedData(e){const i=e?this.graphs.slice(e.start,e.end):this.graphs;A.extraFeatures.toggleZoomBasedData?(this.graphEvents.dataOperationStarted(),z(t=>{i.forEach((s,r)=>{const a=r+(e?e.start:0);g[a]&&g[a].isHidden||(s.fullData=this.getChannelData(a),s.fullBoundaries=s.series.getBoundaries(),s.fullInterval=s.yAxis.getInterval(),t({name:"limitArray",data:{dataMin:s.fullBoundaries.min.y,dataMax:s.fullBoundaries.max.y,data:s.fullData,limitFactor:.2}}))})}).then(t=>{this.graphEvents.dataOperationEnded();let s=0,r=0,a=0;for(;r<g.length&&a<t.length;){let h=s+a+(e?e.start:0);if(r++,g[h]&&g[h].isHidden){s++;continue}const l=this.graphs[h],c=t[a];a++,l.limitedData=c.data,l.limitedDataMin=c.dataMin,l.limitedDataMax=c.dataMax}const o=this.mainGraph.xAxis.getInterval();this.zoomBasedDataHandler.call(this,o.start,o.end,!0),this.zoomBasedDataCB&&this.graphs[0].xAxis.offScaleChange(this.zoomBasedDataCB),this.zoomBasedDataCB=this.graphs[0].xAxis.onScaleChange(this.zoomBasedDataHandler.bind(this))})):(this.graphs[0].xAxis.offScaleChange(this.zoomBasedDataCB),this.zoomBasedDataHandler(0,0),i.forEach(t=>{delete t.fullData,delete t.fullBoundaries,delete t.fullInterval,delete t.limitedData,delete t.limitedDataMin,delete t.limitedDataMax}))}zoomBasedDataHandler(e,i,t){if((t||!this.isShowingLimitedZoomBasedData)&&Math.abs(i-e)>this.maxX/3){const s=document.querySelector("#label-zoom-based-data");s.classList.add("highlight-flash"),setTimeout(()=>{s.classList.remove("highlight-flash")},1e3),this.isShowingLimitedZoomBasedData=!0;for(let r=0;r<this.graphs.length;r++){if(g[r]&&g[r].isHidden)continue;const a=this.graphs[r];a.series.clear(),a.series.addArraysXY(this.timeSeries,a.limitedData),a.yAxis.setInterval(a.limitedDataMin,a.limitedDataMax),a.yAxis.setMouseInteractions(!1),a.yAxis.setChartInteractions(!1)}}else if((t||this.isShowingLimitedZoomBasedData)&&Math.abs(i-e)<=this.maxX/3){const s=document.querySelector("#label-zoom-based-data");s.classList.add("highlight-flash"),setTimeout(()=>{s.classList.remove("highlight-flash")},1e3),this.isShowingLimitedZoomBasedData=!1;for(let r=0;r<this.graphs.length;r++){if(g[r]&&g[r].isHidden)continue;const a=this.graphs[r];a.series.clear(),a.series.addArraysXY(this.timeSeries,a.fullData),a.yAxis.setInterval(a.fullInterval.start,a.fullInterval.end),a.yAxis.setMouseInteractions(!1),a.yAxis.setChartInteractions(!1)}}}updateSecondaryGraphs(e,i){if(e.isSticky){const t=this.graphs[i],s=e.pinnedGraph;if(s.series.clear(),e.isHidden)t.series.restore(),requestAnimationFrame(()=>{s.series.add(t.series.kc[0].La),t.series.dispose();const r=x(e);s.yAxis.setInterval(r.min,r.max)});else{s.series.add(t.series.kc[0].La);const r=x(e);s.yAxis.setInterval(r.min,r.max)}}if(e.isGrouped){const t=this.graphs[i];this.mainGraph.series[i].clear(),e.isHidden?(t.series.restore(),requestAnimationFrame(()=>{this.mainGraph.series[i].add(t.series.kc[0].La),t.series.dispose(),this.mainGraph.repositionYAxis()})):(this.mainGraph.series[i].add(t.series.kc[0].La),this.mainGraph.repositionYAxis())}}updateGraphsYAxis(e,i){const t=this.graphs[i],s=x(e);t.yAxis.setInterval(s.min,s.max)}afterUpdate(e){(!this.hasInitialized||e)&&(this.setXAxisStyle(),this.syncXAxesZoom()),requestAnimationFrame(()=>{this.updateDashboardRowHeights(),this.zoomFullyOut(),this.toggleZoomBasedData(),P((i,t)=>{this.updateSecondaryGraphs(i,t),this.updateGraphsYAxis(i,t)})}),super.afterUpdate&&super.afterUpdate(e)}};var re=Object.freeze(Object.defineProperty({__proto__:null,default:F},Symbol.toStringTag,{value:"Module"}));const H=d=>class extends d{constructor(...e){super(...e),this.lastEvent=null,this.hasInitialized=!1,this.graphEvents=V()}markEvent(){this.lastEvent={timestamp:performance.now()}}registerZoomEvents(e){e.chart.onSeriesBackgroundMouseWheel((i,t)=>{let{deltaY:s}=t;const{xAxis:r,yAxis:a}=e,{start:o,end:h}=r.getInterval();s=-s;const l=this.getNewInterval(o,h,s);r.setInterval(l.start,l.end,!1,!0)})}getNewInterval(e,i,t,s=1e4){if(s<1e3)return!1;const{minX:r,maxX:a}=this,o=Math.min(a,Math.max(r,e+t*s)),h=Math.max(r,Math.min(a,i-t*s));return o*2>a?this.getNewInterval(e,i,t,s/2):{start:o,end:h}}reportRenderEvent(){requestAnimationFrame(()=>{const e=(performance.now()-this.lastEvent.timestamp)/1e3;this.hasInitialized?this.graphEvents.render({duration:e,type:M.render}):(this.hasInitialized=!0,this.graphEvents.init({duration:e,type:M.init})),this.lastEvent=null})}toggleAreaZoom(e){e?this.graphs.forEach(i=>{const{chart:t}=i;t.setMouseInteractionPan(!1),i.chartEvents={offSeriesBackgroundMouseDragStart:t.onSeriesBackgroundMouseDragStart((s,r,a)=>{a===0&&w(r.offsetX)}),offSeriesBackgroundMouseDrag:t.onSeriesBackgroundMouseDrag((s,r,a)=>{a===0&&L(r.offsetX)}),offSeriesBackgroundMouseDragStop:t.onSeriesBackgroundMouseDragStop((s,r,a)=>{if(a!==0)return;const o=T(),h=s.getSeries()[0].scale.x.getPixelSize(),c=this.mainGraph.xAxis.getInterval().start/h-this.dashboardLeftOffset;this.mainGraph.xAxis.setInterval((c+o.x)*h,(c+o.x+o.width)*h,!1,!0)})}}):this.graphs.forEach(i=>{const{chart:t}=i;for(const[s,r]of Object.entries(i.chartEvents))t[s](r),i.chartEvents[s]=null;t.setMouseInteractionPan(!0)})}};var oe=Object.freeze(Object.defineProperty({__proto__:null,default:H},Symbol.toStringTag,{value:"Module"}));class B{get minX(){return this.timeSeries[0]}get maxX(){return this.timeSeries[this.timeSeries.length-1]}get mainGraph(){return this.graphs[this.graphs.length-1]}get maxVisibleCharts(){return A.channels.max}constructor(){this.graphs=[]}init(f){this.markEvent(),this.newDashboard(f),f.addEventListener("wheel",e=>{e.preventDefault()},{passive:!1})}update(f=[],e,i){this.hasInitialized&&this.markEvent(),e&&(this.timeSeries=e);const{graphs:t}=this,s=t.length;let r=0,a=0,o=0;for(;a<g.length&&o<f.length;){let h=r+o;if(a++,i&&!i(g[h])){r++;continue}let l=t[h];const c=f[o];if(o++,g.length!==s&&(h=s+h,t.push(this.addChannel(g[h],h)),l=t[h],this.registerZoomEvents(l)),l.series.clear(),c.data.length!==e.length){console.error("Data length mismatch",c.data.length,e.length);return}l.series.addArraysXY(e,c.data)}t.splice(g.length,t.length-g.length).forEach(h=>{h.chart.dispose();for(let l in h)h[l]=null}),this.afterUpdate(t.length!==s)}afterUpdate(f){requestAnimationFrame(()=>{this.reportRenderEvent()}),super.afterUpdate&&super.afterUpdate(f)}}var le=Object.freeze(Object.defineProperty({__proto__:null,default:B},Symbol.toStringTag,{value:"Module"}));class U extends F(_(H(B))){}const k=new U,N=0,Z=k.graphEvents;function q(...d){k.init(...d)}function W(...d){k.update(...d)}function $(){}function K(){}const J=new Proxy(k,Y);var he=Object.freeze(Object.defineProperty({__proto__:null,baseDate:N,graphEvents:Z,init:q,update:W,showLoading:$,hideLoading:K,api:J},Symbol.toStringTag,{value:"Module"}));export{se as A,he as L,re as a,oe as b,le as c,O as g,ae as i,ie as l,te as r};
