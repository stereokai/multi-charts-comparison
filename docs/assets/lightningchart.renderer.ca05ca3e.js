import{g as I,c as u,u as v,d as P,a as z,G as T,b as R}from"./echarts.renderer.1449bd32.js";import{bp as r,bq as E}from"./vendor.0cc72c00.js";function V(l=new Date){return l.setDate(l.getDate()-1),l.setHours(22)}const L=l=>class f extends l{static CHART_LEFT_PADDING=100;get CHART_LEFT_PADDING(){return f.CHART_LEFT_PADDING}static Y_AXIS_WIDTH=60;get Y_AXIS_WIDTH(){return f.Y_AXIS_WIDTH}static CHART_GAP=10;get CHART_GAP(){return f.CHART_GAP}static addChannel(t,i,s,e,n=!1){const a=t.createChartXY({columnIndex:0,rowIndex:s,columnSpan:1,rowSpan:1,disableAnimations:!0}).setTitle("").setPadding({left:f.CHART_LEFT_PADDING,top:f.CHART_GAP/2,bottom:f.CHART_GAP/2}).setBackgroundStrokeStyle(r.emptyLine).setMouseInteractions(!1).setMouseInteractionPan(!0).setMouseInteractionRectangleFit(!1).setZoomingRectangleStrokeStyle(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("red")})})).setFittingRectangleStrokeStyle(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("blue")})})).setBackgroundFillStyle(new r.SolidFill({color:r.ColorHEX("#f0f0f0")})).setSeriesBackgroundFillStyle(new r.SolidFill({color:r.ColorCSS("white")})),o=a.getDefaultAxisX().setMouseInteractions(!1).setTickStrategy(r.AxisTickStrategies.Empty,c=>console.log(c)).setStrokeStyle(r.emptyLine),d=I(i),h=a.getDefaultAxisY().setMouseInteractions(!1).setChartInteractions(!1).setStrokeStyle(r.emptyLine).setTitle(i.name).setInterval(d.min,d.max).setTitleFont(new r.FontSettings({size:12})).setTitleFillStyle(new r.SolidFill({color:r.ColorHEX("#6e7079")})).setTitleRotation(0).setThickness(f.Y_AXIS_WIDTH).setAnimationZoom(void 0).setTickStrategy(r.AxisTickStrategies.Numeric,c=>c.setMajorTickStyle(p=>p.setLabelFillStyle(new r.SolidFill({color:r.ColorHEX("#6e7079")})).setLabelFont(new r.FontSettings({size:6})).setTickStyle(r.emptyLine)).setMinorTickStyle(p=>p.setLabelFont(new r.FontSettings({size:6})).setTickStyle(r.emptyLine)));i.dynamicYAxis||h.setScrollStrategy(void 0);let g;return n||(g=f.addLineSeries(a,typeof e=="number"?e:s)),a.setAutoCursorMode(r.AutoCursorModes.disabled),{chart:a,series:g,xAxis:o,yAxis:h,row:s}}static addLineSeries(t,i=0){return t.addLineSeries({dataPattern:{pattern:"ProgressiveX",regularProgressiveStep:!0,allowDataGrouping:!0},automaticColorIndex:i}).setStrokeStyle(s=>s.setThickness(-1))}addChannel(t,i,s,e){window.graphs=this.graphs;const n=f.addChannel(this.dashboard,t,i,s,e),{chart:a,series:o,xAxis:d,yAxis:h,row:g}=n;return a.onSeriesBackgroundMouseClick((c,p)=>{try{const S=o.solveNearestFromScreen(c.engine.clientLocation2Engine(p.clientX,p.clientY)),F=parseFloat(S.resultTableContent[1][1]),B=parseFloat(S.resultTableContent[2][1]);this.addEvent({x:F,y:B},i)}catch(S){console.log(`Could not add event marker, ${S}`)}this.markers.forEach(S=>{S.setResultTableVisibility(r.UIVisibilityModes.never)})}),n}addLineSeries(t,i){return f.addLineSeries(t,i)}};var K=Object.freeze(Object.defineProperty({__proto__:null,default:L},Symbol.toStringTag,{value:"Module"})),C=`<svg id="areazoom-svg" style="position: absolute; z-index: 10000; width: 100%; height: 100%; pointer-events: none;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <!-- <rect id="resize" fill="red" x="190" y="160" width="20" height="20" /> -->
  <rect id="areazoom-rect" fill="rgba(50, 50, 50, 0.5)" />
</svg>`;let m,x;function k(l){l.insertAdjacentHTML("beforeend",C),m=document.getElementById("areazoom-rect")}function w(l){m.setAttribute("height",l)}function M(l){x=l,m.setAttribute("x",l)}function G(l){l>x?m.setAttribute("width",l-x):(m.setAttribute("width",x-l),m.setAttribute("x",l))}function D(){const l=m.getAttribute("x"),y=m.getAttribute("width");return m.setAttribute("width",0),{x:l|0,width:y|0}}var Q=Object.freeze(Object.defineProperty({__proto__:null,svg:C,init:k,setHeight:w,setPosition:M,move:G,hide:D},Symbol.toStringTag,{value:"Module"})),ee=Object.freeze(Object.defineProperty({__proto__:null,svg:C,init:k,setHeight:w,setPosition:M,move:G,hide:D},Symbol.toStringTag,{value:"Module"}));E.init();const H=l=>class b extends l{static visibleGridStyle=new r.SolidLine({thickness:1,fillStyle:new r.SolidFill({color:r.ColorCSS("#dfdfdf")})});static hiddenGridStyle=r.emptyLine;static getNewDashboard(t,i){return r.lightningChart({overrideInteractionMouseButtons:{chartXYPanMouseButton:0,chartXYRectangleZoomFitMouseButton:2}}).Dashboard({container:t,numberOfColumns:1,numberOfRows:i,theme:r.Themes.lightNew}).setBackgroundFillStyle(new r.SolidFill({color:r.ColorCSS("white")})).setSplitterStyle(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("black")})})).setSplitterStyleHighlight(new r.SolidLine({thickness:2,fillStyle:new r.SolidFill({color:r.ColorCSS("black")})}))}get maxVisibleCharts(){return super.maxVisibleCharts*2+1}get mainGraph(){return this.graphGroup||super.mainGraph}get dashboardLeftOffset(){return this.CHART_LEFT_PADDING+this.Y_AXIS_WIDTH}constructor(...t){super(...t),this.pinnedGraphs=[],this.markers=[]}newDashboard(t,i=this.maxVisibleCharts){this.dashboard=b.getNewDashboard(t,i),k(t)}updateDashboardRowHeights(){const{dashboard:t,graphs:i,pinnedGraphs:s,mainGraph:e,maxVisibleCharts:n}=this,a=i.map((c,p)=>p).filter(c=>!u[c].isHidden);e.isGroup&&a.push(e.graphIndex);const o=s.map(c=>c.pinnedIndex),d=a.concat(o),h=e.xAxis.getHeight(),g=(t.engine.container.clientHeight-h)/d.length;for(let c=0;c<n;c++)d.includes(c)?t.setRowHeight(c,Math.round(g)):t.setRowHeight(c,1e-5);t.setRowHeight(e.row,Math.round(g+h)),window.dashboard=t,w(a.length*g)}setXAxisStyle(){this.graphs.forEach((t,i)=>{t.xAxis.setTickStrategy(r.AxisTickStrategies.Empty)}),this.mainGraph.xAxis.setTickStrategy(r.AxisTickStrategies.DateTime,t=>t.setDateOrigin(new Date(V())).setMajorTickStyle(i=>i.setGridStrokeStyle(r.emptyLine).setTickStyle(r.emptyLine)).setMinorTickStyle(i=>i.setGridStrokeStyle(r.emptyLine).setTickStyle(r.emptyLine)))}syncXAxesZoom(){this.axisSyncHandle&&this.axisSyncHandle.remove();const t=this.graphs.map(i=>i.xAxis);this.mainGraph.isGroup&&t.push(this.mainGraph.xAxis),this.axisSyncHandle=r.synchronizeAxisIntervals(...t)}resetView(){const{mainGraph:t,minX:i,maxX:s}=this;t.xAxis.setInterval(i,s,!1,!0)}toggleGrid(t){this.graphs.forEach(i=>{const s=i.yAxis.getTickStrategy();i.yAxis.setTickStrategy(s,e=>e.setMajorTickStyle(n=>n.setGridStrokeStyle(t?b.visibleGridStyle:b.hiddenGridStyle)))})}toggleChannelVisibility(t,i=!1){const s=this.graphs[t];u[t].isHidden?(s.series.dispose(),s.yAxis.dispose()):(s.series.restore(),s.yAxis.restore(),this.toggleZoomBasedData({start:t,end:t+1})),i||this.updateDashboardRowHeights()}toggleChannelSticky(t,i=!1,s=NaN){const{pinnedGraphs:e,graphs:n}=this,a=n[t],o=u[t];if(o.isSticky){const d=isNaN(s)?e.length&&e[e.length-1].pinnedIndex-1||this.maxVisibleCharts-1:s,h=this.addChannel(o,d,t);h.pinnedIndex=d,e.push(h),h.series.add(a.series.kc[0].La),o.pinnedGraph=h}else{if(!o.pinnedGraph)return;const d=o.pinnedGraph;o.pinnedGraph=null,e.splice(e.indexOf(d),1).forEach(h=>{h.chart.dispose();for(let g in h)h[g]=null})}i||this.updateDashboardRowHeights()}addGraphGroup(){const t=Math.floor(this.maxVisibleCharts/2),i=this.addChannel({name:"Channel Group"},t,null,!0);this.graphGroup=i,i.isGroup=!0,i.graphIndex=t,i.series={},i.repositionYAxis=function(){const{yAxis:e}=this;e.setInterval(...Object.values(this.series).reduce((n,a)=>(n[0]=Math.min(n[0],a.__bounds.min),n[1]=Math.max(n[1],a.__bounds.max),n),[1/0,-1/0]),!1,!0)}.bind(i)}toggleChannelGrouped(t,i=!1){const s=u[t];if(s.isGrouped){this.mainGraph.isGroup||this.addGraphGroup();const{graphs:e,mainGraph:n}=this,a=e[t],o=this.addLineSeries(n.chart,t);o.__bounds=I(s),n.series[t]=o,n.repositionYAxis(),o.add(a.series.kc[0].La)}else{if(!this.mainGraph.isGroup)return;const{mainGraph:e}=this,n=e.series[t];if(!n)return;if(n.dispose(),e.series[t]=null,delete e.series[t],Object.keys(e.series).length===0){e.chart.dispose();for(let a in e)e[a]=null;this.graphGroup=null}else e.repositionYAxis()}i||(this.setXAxisStyle(),this.syncXAxesZoom(),requestAnimationFrame(()=>{this.updateDashboardRowHeights()}))}newMontage(){return u.map((t,i)=>({channelIndex:i,isHidden:t.isHidden,isSticky:t.isSticky,isGrouped:t.isGrouped,pinnedGraphIndex:t.pinnedGraph&&t.pinnedGraph.pinnedIndex}))}loadMontage(t){if(this.pinnedGraphs.splice(0).forEach(i=>{i.chart.dispose();for(let s in i)i[s]=null}),this.mainGraph.isGroup){this.graphGroup.chart.dispose();for(let i in this.mainGraph)this.mainGraph[i]=null;this.graphGroup=null}t.forEach((i,s)=>{u[s].isHidden=i.isHidden,u[s].isSticky=i.isSticky,u[s].isGrouped=i.isGrouped,this.toggleChannelVisibility(s,!0),this.toggleChannelSticky(s,!0,i.pinnedGraphIndex),this.toggleChannelGrouped(s)}),this.updateDashboardRowHeights()}panLeft(){const{xAxis:t,series:i}=this.mainGraph,{minX:s}=this,{start:e,end:n}=t.getInterval(),a=i.scale.x.getPixelSize();let o=(e-n)/4;e+o<s&&(o=s-e),t.pan(o/a)}panRight(){const{xAxis:t,series:i}=this.mainGraph,{maxX:s}=this,{start:e,end:n}=t.getInterval(),a=i.scale.x.getPixelSize();let o=(n-e)/4;n+o>s&&(o=s-n),t.pan(o/a)}addEvent(t,i){if(!v.extraFeatures.events)return;const s=this.graphs[i],{chart:e,series:n}=s,a=e.addChartMarkerXY(void 0,e.getDefaultAxisX(),e.getDefaultAxisY()).setPosition({x:t.x,y:t.y});this.markers.push(a),a.getPointMarker().setFillStyle(new r.SolidFill({color:r.ColorHEX("#0075ff")})).onMouseClick(()=>{this.markers.forEach(h=>{h.setResultTableVisibility(r.UIVisibilityModes.never)}),a.setResultTableVisibility(r.UIVisibilityModes.always)}),a.getResultTable().onMouseClick(()=>{E.show("modal-1",{onShow:(h,g,c)=>{h.querySelector("textarea").value=a.__content.reduce((p,S)=>p+S.join(" ")+`
`,"")},onClose:(h,g,c)=>{if(c.target.hasAttribute("ok")){a.__content=h.querySelector("textarea").value.trim().split(`
`).map(p=>[p]),a.setResultTable(p=>p.setContent(a.__content));return}if(c.target.hasAttribute("remove")){a.setResultTableVisibility(r.UIVisibilityModes.never),a.dispose(),this.markers.splice(this.markers.indexOf(a),1);return}}})}),a.__content=[["Custom event"],["Number",this.markers.length.toString()]],a.setResultTableVisibility(r.UIVisibilityModes.never).setResultTable(h=>h.setContent(a.__content)).setDraggingMode(r.UIDraggingModes.notDraggable).setGridStrokeXVisibility(r.UIVisibilityModes.whenDragged).setGridStrokeYVisibility(r.UIVisibilityModes.whenDragged).setTickMarkerXVisibility(r.UIVisibilityModes.whenDragged).setTickMarkerYVisibility(r.UIVisibilityModes.whenDragged)}toggleZoomBasedData(t){const i=t?this.graphs.slice(t.start,t.end):this.graphs;v.extraFeatures.toggleZoomBasedData?P(s=>{i.forEach((e,n)=>{if(!(u[n]&&u[n].isHidden)){e.fullData=[];for(let a=0;a<e.series.kc[0].La.length;a++)e.fullData[a]=e.series.kc[0].La[a].y;e.fullBoundaries=e.series.getBoundaries(),e.fullInterval=e.yAxis.getInterval(),s({name:"limitArray",data:{dataMin:e.fullBoundaries.min.y,dataMax:e.fullBoundaries.max.y,channelData:e.fullData,limitFactor:.2}})}})}).then(s=>{let e=0;s.forEach((a,o)=>{u[o]&&u[o].isHidden&&e++;const d=this.graphs[o+e];d.limitedData=a.data,d.limitedDataMin=a.dataMin,d.limitedDataMax=a.dataMax});const n=this.mainGraph.xAxis.getInterval();this.zoomBasedDataHandler.call(this,n.start,n.end),this.zoomBasedDataCB=this.graphs[0].xAxis.onScaleChange(this.zoomBasedDataHandler.bind(this))}):(this.graphs[0].yAxis.offScaleChange(this.zoomBasedDataCB),this.zoomBasedDataHandler(0,0),i.forEach(s=>{s.fullData=null,s.fullBoundaries=null,s.fullInterval=null,s.limitedData=null,s.limitedDataMin=null,s.limitedDataMax=null}))}zoomBasedDataHandler(t,i){if(!this.isShowingLimitedZoomBasedData&&Math.abs(i-t)>this.maxX/3){const s=document.querySelector("#label-zoom-based-data");s.classList.add("highlight-flash"),setTimeout(()=>{s.classList.remove("highlight-flash")},1e3),this.isShowingLimitedZoomBasedData=!0,this.graphs.forEach((e,n)=>{u[n]&&u[n].isHidden||(e.series.clear(),e.series.addArraysXY(this.timeSeries,e.limitedData),e.yAxis.setInterval(e.limitedDataMin,e.limitedDataMax),e.yAxis.setMouseInteractions(!1),e.yAxis.setChartInteractions(!1))})}else if(this.isShowingLimitedZoomBasedData&&Math.abs(i-t)<=this.maxX/3){const s=document.querySelector("#label-zoom-based-data");s.classList.add("highlight-flash"),setTimeout(()=>{s.classList.remove("highlight-flash")},1e3),this.isShowingLimitedZoomBasedData=!1,this.graphs.forEach((e,n)=>{u[n]&&u[n].isHidden||(e.series.clear(),e.series.addArraysXY(this.timeSeries,e.fullData),e.yAxis.setInterval(e.fullInterval.start,e.fullInterval.end),e.yAxis.setMouseInteractions(!1),e.yAxis.setChartInteractions(!1))})}}afterUpdate(){requestAnimationFrame(()=>{this.toggleZoomBasedData()}),super.afterUpdate&&super.afterUpdate()}};var te=Object.freeze(Object.defineProperty({__proto__:null,default:H},Symbol.toStringTag,{value:"Module"}));const _=l=>class extends l{constructor(...t){super(...t),this.lastEvent=null,this.hasInitialized=!1,this.graphEvents=z()}markEvent(){this.lastEvent={timestamp:performance.now()}}registerZoomEvents(t){t.chart.onSeriesBackgroundMouseWheel((i,s)=>{let{deltaY:e}=s;const{xAxis:n,yAxis:a}=t,{start:o,end:d}=n.getInterval();e=-e;const h=this.getNewInterval(o,d,e);n.setInterval(h.start,h.end,!1,!0)})}getNewInterval(t,i,s,e=1e4){if(e<1e3)return!1;const{minX:n,maxX:a}=this,o=Math.min(a,Math.max(n,t+s*e)),d=Math.max(n,Math.min(a,i-s*e));return o*2>a?this.getNewInterval(t,i,s,e/2):{start:o,end:d}}reportRenderEvent(){requestAnimationFrame(()=>{const t=(performance.now()-this.lastEvent.timestamp)/1e3;this.hasInitialized?this.graphEvents.render({duration:t,type:T.render}):(this.hasInitialized=!0,this.graphEvents.init({duration:t,type:T.init})),this.lastEvent=null})}toggleAreaZoom(t){t?this.graphs.forEach(i=>{const{chart:s}=i;s.setMouseInteractionPan(!1),i.chartEvents={offSeriesBackgroundMouseDragStart:s.onSeriesBackgroundMouseDragStart((e,n,a)=>{a===0&&M(n.offsetX)}),offSeriesBackgroundMouseDrag:s.onSeriesBackgroundMouseDrag((e,n,a)=>{a===0&&G(n.offsetX)}),offSeriesBackgroundMouseDragStop:s.onSeriesBackgroundMouseDragStop((e,n,a)=>{if(a!==0)return;const o=D(),d=e.getSeries()[0].scale.x.getPixelSize(),g=this.mainGraph.xAxis.getInterval().start/d-this.dashboardLeftOffset;this.mainGraph.xAxis.setInterval((g+o.x)*d,(g+o.x+o.width)*d,!1,!0)})}}):this.graphs.forEach(i=>{const{chart:s}=i;for(const[e,n]of Object.entries(i.chartEvents))s[e](n),i.chartEvents[e]=null;s.setMouseInteractionPan(!0)})}};var se=Object.freeze(Object.defineProperty({__proto__:null,default:_},Symbol.toStringTag,{value:"Module"}));class X{get minX(){return this.timeSeries[0]}get maxX(){return this.timeSeries[this.timeSeries.length-1]}get mainGraph(){return this.graphs[this.graphs.length-1]}get maxVisibleCharts(){return v.channels.max}constructor(){this.graphs=[]}init(y){this.markEvent(),this.newDashboard(y),y.addEventListener("wheel",t=>{t.preventDefault()},{passive:!1})}update(y=[],t){this.hasInitialized&&this.markEvent(),t&&(this.timeSeries=t);const{graphs:i}=this,s=i.length;this.hasChannelsChanged=!1,y.forEach((e,n)=>{let a=i[n],o=n;u.length!==s&&(this.hasChannelsChanged=!0,o=s+n,i.push(this.addChannel(u[o],o)),a=i[o],this.registerZoomEvents(a)),a.series.clear(),a.series.addArraysXY(t,e.data)}),i.splice(u.length,i.length-u.length).forEach(e=>{this.hasChannelsChanged=!0,e.chart.dispose();for(let n in e)e[n]=null}),this.afterUpdate()}afterUpdate(){(!this.hasInitialized||this.hasChannelsChanged)&&(this.setXAxisStyle(),this.syncXAxesZoom()),requestAnimationFrame(()=>{(!this.hasInitialized||this.hasChannelsChanged)&&this.updateDashboardRowHeights(),this.resetView(),this.reportRenderEvent()})}}var ae=Object.freeze(Object.defineProperty({__proto__:null,default:X},Symbol.toStringTag,{value:"Module"}));class O extends H(L(_(X))){}const A=new O,j=0,Y=A.graphEvents;function N(...l){A.init(...l)}function Z(...l){A.update(...l)}function U(){}function q(){}const W=new Proxy(A,R);var ne=Object.freeze(Object.defineProperty({__proto__:null,baseDate:j,graphEvents:Y,init:N,update:Z,showLoading:U,hideLoading:q,api:W},Symbol.toStringTag,{value:"Module"}));export{Q as A,ne as L,te as a,se as b,ae as c,V as g,ee as i,K as l};
